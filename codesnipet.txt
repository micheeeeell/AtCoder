{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"vector_ll":{
		"prefix": "vl",
		"body": "vector<ll>"
	},

	"cin_vector_int":{
        "prefix": "cvi",
        "body":[
            "vector<int> $1($2);",
            "rep(i,$2) cin >> $1[i];",
        ],
        "description": "vector<int>の受取"
	},
	"cin_string_int":{
        "prefix": "cs",
        "body":[
            "string $1;cin >> $1;"
        ],
        "description": "stringの受取"
	},
	"cin_one_int":{
		"prefix":"c1i",
		"body":[
			"int $1; cin >> $1;",
		],
		"description":"int の受け取り（1数）"
	},
	"cin_two_int":{
		"prefix":"c2i",
		"body":[
			"int $1,$2; cin >> $1 >> $2;",
		],
		"description":"int の受け取り（2数）"
	},
	"cin_three_int":{
		"prefix":"c3i",
		"body":[
			"int $1,$2,$3; cin >> $1 >> $2 >> $3;",
		],
		"description":"int の受け取り（3数）"
	},
	"cin_vector_ll":{
        "prefix": "cvl",
        "body":[
            "vector<ll> $1($2);",
            "rep(i,$2) cin >> $1[i];",
        ],
        "description": "vector<ll>の受取"
	},

	"cin_two_vector_ll":{
        "prefix": "c2vl",
        "body":[
            "vector<ll> $1($3), $2($3);",
            "rep(i,$3) cin >> $1[i] >> $2[i];",
        ],
        "description": "vector<ll>二つの受取"
	},

	"cin_one_ll":{
		"prefix":"c1l",
		"body":[
			"ll $1; cin >> $1;",
		],
		"description":"long long の受け取り（1数）"
	},
	"cin_two_ll":{
		"prefix":"c2l",
		"body":[
			"ll $1,$2; cin >> $1 >> $2;",
		],
		"description":"long long の受け取り（2数）"
	},
	"cin_three_ll":{
		"prefix":"c3l",
		"body":[
			"ll $1,$2,$3; cin >> $1 >> $2 >> $3;",
		],
		"description":"long long の受け取り（3数）"
	},
	"cin_graph_ll":{
		"prefix": "cgl",
		"body": [
			"vector<vector<ll>> graph($1);",
			"rep(i,$1) {",
			"\tll $2,$3;cin >> $2 >> $3;",
			"\t$2--;$3--;",
			"\tgraph[$2].emplace_back($3);",
			"\tgraph[$3].emplace_back($2);",
			"}"
		],
		"description": "無向重みなしグラフの受け取り"
	},
	"include template": {
		"prefix": "itemp",
		"body": [
			"#include<bits/stdc++.h>",
			"#include<iostream>",
			"#include<cstdio>",
			"#include<vector>",
			"#include<string>",
			"#include<algorithm>",
			"#include<map>",
			"using namespace std;",
			"#define rep(i,x) for(ll i = 0; i < (ll)(x); i++)",
			"#define pb push_back",
			"#define eb emplace_back",
			"#define debug(x) cerr << #x << \": \" << (x) << \"\\n\";",
			"#define all(x) (x).begin(), (x).end()",
			"typedef long long ll;",
			"typedef long double ld;",
			"typedef pair<int,int> P;",
			"typedef pair<ll,ll> Pll;",
			"typedef vector<ll> vl;",
			"typedef vector<vector<ll>> vvl;",
			"typedef vector<vector<vector<ll>>> vvvl;",
			"const ll INF = numeric_limits<ll>::max()/4;",
			"const ll MOD = 1e9+7;",
			"const int n_max = 1e5+10;\n",
			"int main(){",
			"\t$1",
			"}"
		],
		"description": "The template of Include library"
	},

	"print_function":{
		"prefix": "print_func",
		"body": [
			"void print() {",
			"\tcout << endl;",
			"}\n",
			"template <class Head, class... Tail>",
			"void print(Head&& head, Tail&&... tail) {",
			"\tcout << head;",
			"\tif (sizeof...(tail) != 0) cout << ' ';",
			"\tprint(forward<Tail>(tail)...);",
			"}\n",
			"template <class T>",
			"void print(vector<T> &vec) {",
			"\tfor (auto& a : vec) {",
			"\t\tcout << a;",
			"\t\tif (&a != &vec.back()) cout << ' ';",
			"\t}",
			"\tcout << endl;",
			"}\n",
			"template <class T>",
			"void print(vector<vector<T>> &df) {",
			"\tfor (auto& vec : df) {",
			"\t\tprint(vec);",
			"\t}",
			"}\n",
			// "template<typename T>",
			// "void print(T &arr){",
    		// "\tll sz = sizeof(arr)/sizeof(arr[0]);",
    		// "\tfor(int i = 0;i < sz-1;i++){cout << arr[i] << ' ';}",
    		// "\tcout << arr[sz-1] << endl;",
			// "}\n"
			"template<class T, class U>",
			"void print(pair<T,U> p){",
			"\tcout << p.first << \" \" << p.second << \"\\n\";",
			"}",

		]
	},

	"all_vector":{
		"prefix": "all_vec",
		"body": [
			"$1.begin(), $1.end()"
		]
	},

	"cin.tie(0)":{
		"prefix": "cin.tie",
		"body": [
			"cin.tie(0);",
			"ios::sync_with_stdio(false);\n"
		]
	},

	"ch_function":{
		"prefix": "ch_func",
		"body": [
			"template<class T>",
			"bool chmax(T &a, T b){if(a < b){a = b; return true;} return false;}",
			"template<class T>",
			"bool chmin(T &a, T b){if(a > b){a = b; return true;} return false;}"
		]
	},

	"input_file":{
		"prefix": "input_file",
		"body": [
			"ifstream in(\"input.in\");",
    		"cin.rdbuf(in.rdbuf());"
		]
	}
}